buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }

}

repositories {
    maven {
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name = "ic2-and-forestry"
        url = "http://maven.ic2.player.to/"
    }
}

apply plugin: 'forge'

version = project.mod_version
group = mod_group
archivesBaseName = mod_archive_name

minecraft {
    runDir = "run"
    version = minecraft_version + "-" + forge_version
    replaceIn mod_info_path
    replace "%MOD_VERSION%", mod_version
    replace "%FORGE_VERSION%", forge_version
}
dependencies {
    compile "codechicken:CodeChickenLib:${minecraft_version}-${CCLIB_version}:dev"
    compile "codechicken:CodeChickenCore:${minecraft_version}-${CCC_version}:dev"
    compile "codechicken:NotEnoughItems:${minecraft_version}-${NEI_version}:dev"
    compile "mcp.mobius.waila:Waila:${WAILA_version}_${minecraft_version}:dev"
    compile "net.industrial-craft:industrialcraft-2:${IC2_version}:dev"
    compile "appeng:appliedenergistics2:${AE2_version}:dev"
}

def final_display_version = hasProperty("display_version") ? display_version : minecraft_version
version = "${final_display_version}-${mod_version}.B${System.getenv("BUILD_NUMBER") ?: 0}"

processResources {
    // this will ensure that this task is redone when the versions change.
	inputs.property "mod_version", mod_version
	inputs.property "minecraft_version", minecraft_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'mod_version':mod_version, 'minecraft_version':minecraft_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'remoteio.core.LoadingPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }

    classifier = 'universal'
}